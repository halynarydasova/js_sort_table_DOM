{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","captions","employees","sortTable","a","b","columnName","first","second","localeCompare","Array","from","children","forEach","el","push","Name","textContent","Position","Age","Salary","replace","addEventListener","e","sortValue","target","sort","innerHTML","employee","Object","row","createElement","entries","key","data","column","salary","toLocaleString","append"],"mappings":";AAAA,aA0BA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAxBA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAWF,SAASC,cAAc,SAClCE,EAAY,GAWlB,SAASC,EAAUC,EAAGC,EAAGC,GACjBC,IAAAA,EAAQH,EAAEE,GACVE,EAASH,EAAEC,GAEbA,MAAe,SAAfA,GAAwC,aAAfA,EACpBC,EAAME,cAAcD,GAGtBD,EAAQC,EAjBjBE,MAAMC,KAAKb,EAAMc,UAAUC,QAAQ,SAAAC,GACjCZ,EAAUa,KAAK,CACbC,KAAMF,EAAGF,SAAS,GAAGK,YACrBC,SAAUJ,EAAGF,SAAS,GAAGK,YACzBE,IAAKL,EAAGF,SAAS,GAAGK,YACpBG,QAASN,EAAGF,SAAS,GAAGK,YAAYI,QAAQ,QAAS,QAezDpB,EAASqB,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAYD,EAAEE,OAAOR,YAE3Bf,EAAUwB,KAAK,SAACtB,EAAGC,GAAMF,OAAAA,EAAUC,EAAGC,EAAGmB,KACzC1B,EAAM6B,UAAY,GAElBzB,EAAUW,QAAQ,SAAAe,GAGYC,IAFtBC,IAAAA,EAAM/B,SAASgC,cAAc,MAEPF,EAAAA,EAAAA,EAAAA,OAAOG,QAAQJ,GAAW,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAzCK,EAAyC,EAAA,GAApCC,EAAoC,EAAA,GAC9CC,EAASpC,SAASgC,cAAc,MAIlCE,GAFJE,EAAOlB,YAAciB,EAET,WAARD,EAAkB,CACdG,IAAAA,EAAaF,IAAAA,OAAAA,EAAKG,kBAExBF,EAAOlB,YAAcmB,EAGvBN,EAAIQ,OAAOH,GAEbrC,EAAMwC,OAAOR","file":"main.7f4ac3bc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('tbody');\nconst captions = document.querySelector('thead');\nconst employees = [];\n\nArray.from(table.children).forEach(el => {\n  employees.push({\n    Name: el.children[0].textContent,\n    Position: el.children[1].textContent,\n    Age: el.children[2].textContent,\n    Salary: +el.children[3].textContent.replace(/[,$]/g, ''),\n  });\n});\n\nfunction sortTable(a, b, columnName) {\n  const first = a[columnName];\n  const second = b[columnName];\n\n  if (columnName === 'Name' || columnName === 'Position') {\n    return first.localeCompare(second);\n  }\n\n  return first - second;\n}\n\ncaptions.addEventListener('click', (e) => {\n  const sortValue = e.target.textContent;\n\n  employees.sort((a, b) => sortTable(a, b, sortValue));\n  table.innerHTML = '';\n\n  employees.forEach(employee => {\n    const row = document.createElement('tr');\n\n    for (const [ key, data ] of Object.entries(employee)) {\n      const column = document.createElement('td');\n\n      column.textContent = data;\n\n      if (key === 'Salary') {\n        const salary = `$${data.toLocaleString()}`;\n\n        column.textContent = salary;\n      }\n\n      row.append(column);\n    };\n    table.append(row);\n  });\n});\n"]}